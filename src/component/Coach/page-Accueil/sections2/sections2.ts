import { CommonModule } from '@angular/common';
import { Component, OnInit } from '@angular/core';
import { FormsModule } from '@angular/forms';

@Component({
  selector: 'app-sections2',
  templateUrl: './sections2.html',
  styleUrls: ['./sections2.css'],
  standalone: true,
  imports: [FormsModule, CommonModule],
})
export class Sections2 implements OnInit {

  // G√®re quelle carte est ouverte
  activeFeatureIndex: number | null = null;

  features = [
    { 
      title: 'Convocations simplifi√©es', 
      description: 'Envoyez des convocations aux joueurs rapidement et suivez leur r√©ponse. Plus de d√©tails sur le processus, mod√®les, rappels automatiques et statistiques d‚Äôacceptation.',
      icon: 'fa-solid fa-envelope'  // ‚úâÔ∏è Exemple
    },
    { 
      title: 'Gestion des √©v√©nements', 
      description: 'Cr√©ez, planifiez et g√©rez vos √©v√©nements internes ou externes. Vous pouvez g√©rer la liste des participants, envoyer des notifications et visualiser la participation en temps r√©el.',
      icon: 'fa-solid fa-calendar-days'  // üìÖ Exemple
    },
    { 
      title: 'Suivi des joueurs', 
      description: 'Visualisez les performances et la disponibilit√© de vos joueurs. Historique des matchs, statistiques individuelles et suivi des absences pour optimiser vos entra√Ænements.',
      icon: 'fa-solid fa-users'  // üë• Exemple
    },
    { 
      title: 'Discussion Priv√©e', 
      description: 'Envoyez des messages priv√©s √† vos joueurs ou coll√®gues du staff. Suivez les conversations et restez connect√© avec votre √©quipe en toute simplicit√©.',
      icon: 'fa-solid fa-comments'  // üí¨ Ic√¥ne adapt√©e aux messages
    }    
  ];

  currentUser: any = null;

  ngOnInit() {
    const userData = localStorage.getItem('currentUser');
    if (userData) {
      this.currentUser = JSON.parse(userData);
    }
  }

  openFeature(index: number) {
    this.activeFeatureIndex = index;
  }

  closeFeature() {
    this.activeFeatureIndex = null;
  }
}
